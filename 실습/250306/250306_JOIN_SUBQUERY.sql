-- KH_연습문제
-- 1. 2025년 12월 25일의 요일 조회
SELECT TO_CHAR(TO_DATE(20251225), 'DAY') FROM DUAL;

-- 2. 70년대 생(1970~1979) 중 여자이면서 전씨인 사원의 이름과, 주민번호, 부서명, 직급 조회
SELECT EMP_NAME, EMP_NO, DEPT_TITLE, JOB_NAME
FROM EMPLOYEE
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
JOIN JOB USING (JOB_CODE)
WHERE SUBSTR(EMP_NO, 1,2) BETWEEN 70 AND 79
    AND SUBSTR(EMP_NO, 8,1) IN ('2', '4')
    AND EMP_NAME LIKE '전%';
      
-- 3. 가장 막내의 사원 코드, 사원 명, 나이, 부서 명, 직급 명 조회
SELECT ROWNUM, EMP_ID, EMP_NAME, 나이, DEPT_TITLE, JOB_NAME
FROM (
        SELECT EMP_ID, EMP_NAME, (2025 - ('19'||SUBSTR(EMP_NO,1,2))) 나이, DEPT_TITLE, JOB_NAME
        FROM EMPLOYEE
        JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
        JOIN JOB USING (JOB_CODE)
        ORDER BY 3
    )
WHERE ROWNUM = 1;

-- 4. 이름에 ‘형’이 들어가는 사원의 사원 코드, 사원 명, 직급 조회
SELECT EMP_ID, EMP_NAME, JOB_NAME
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
WHERE EMP_NAME LIKE '%형%';
 
-- 5. 부서 코드가 D5이거나 D6인 사원의 사원 명, 직급, 부서 코드, 부서 명 조회
SELECT EMP_NAME, JOB_NAME, DEPT_CODE, DEPT_TITLE
FROM EMPLOYEE
JOIN JOB USING(JOB_CODE)
JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
WHERE DEPT_CODE IN ('D5', 'D6');
 
-- 6. 보너스를 받는 사원의 사원 명, 보너스, 부서 명, 지역 명 조회
SELECT EMP_NAME, BONUS, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE, DEPARTMENT, LOCATION
WHERE DEPT_CODE = DEPT_ID
AND LOCATION_ID = LOCAL_CODE
AND BONUS IS NOT NULL;

-- 7. 사원 명, 직급, 부서 명, 지역 명 조회
SELECT EMP_NAME, JOB_NAME, DEPT_TITLE, LOCAL_NAME
FROM EMPLOYEE E, JOB J,DEPARTMENT, LOCATION
WHERE E.JOB_CODE = J.JOB_CODE
AND DEPT_CODE = DEPT_ID
AND LOCATION_ID = LOCAL_CODE;
 
-- 8. 한국이나 일본에서 근무 중인 사원의 사원 명, 부서 명, 지역 명, 국가 명 조회 
SELECT EMP_NAME, DEPT_TITLE, LOCAL_NAME, NATIONAL_NAME
FROM EMPLOYEE, DEPARTMENT, LOCATION L, NATIONAL N
WHERE DEPT_CODE = DEPT_ID
AND L.NATIONAL_CODE = N.NATIONAL_CODE
AND NATIONAL_NAME IN ('한국', '일본');

-- 9. 한 사원과 같은 부서에서 일하는 사원의 이름 조회
SELECT E.EMP_NAME, E.DEPT_CODE, N.EMP_NAME
FROM EMPLOYEE E, EMPLOYEE N
WHERE E.DEPT_CODE = N.DEPT_CODE
AND NOT E.EMP_NAME = N.EMP_NAME
ORDER BY 1;
 
-- 10. 보너스가 없고 직급 코드가 J4이거나 J7인 사원의 이름, 직급, 급여 조회 (NVL 이용)
SELECT EMP_NAME, JOB_NAME, SALARY, NVL(BONUS, 0) 보너스
FROM EMPLOYEE
JOIN JOB USING (JOB_CODE)
WHERE BONUS IS NULL
AND JOB_CODE IN ('J4', 'J7');
 
-- 11. 퇴사 하지 않은 사람과 퇴사한 사람의 수 조회
SELECT ENT_YN, COUNT(*)
FROM EMPLOYEE
GROUP BY ENT_YN;
 
-- 12. 보너스 포함한 연봉이 높은 5명의 사번, 이름, 부서 명, 직급, 입사일, 순위 조회
SELECT 사번, 이름, "부서 명", 직급, 입사일, ROWNUM 순위
FROM(
    SELECT EMP_ID 사번, EMP_NAME 이름, DEPT_TITLE "부서 명", JOB_NAME 직급, HIRE_DATE 입사일
    FROM EMPLOYEE
    JOIN DEPARTMENT ON DEPT_CODE = DEPT_ID
    JOIN JOB USING (JOB_CODE)
    ORDER BY (SALARY + (SALARY*NVL(BONUS,0)))*12 DESC
    )
WHERE ROWNUM <= 5;
 
-- 13. 부서 별 급여 합계가 전체 급여 총 합의 20%보다 많은 부서의 부서 명, 부서 별 급여 합계 조회
--	13-1. JOIN과 HAVING 사용
SELECT DEPT_TITLE, SUM(SALARY)
FROM DEPARTMENT
JOIN EMPLOYEE ON DEPT_ID = DEPT_CODE
GROUP BY DEPT_TITLE
HAVING SUM(SALARY) > (SELECT SUM(SALARY)*0.2 FROM EMPLOYEE);
                      
--	13-2. 인라인 뷰 사용
SELECT DEPT_TITLE, "급여 합"
FROM (
        SELECT DEPT_TITLE, SUM(SALARY)"급여 합"
        FROM DEPARTMENT
        JOIN EMPLOYEE ON DEPT_ID = DEPT_CODE
        GROUP BY DEPT_TITLE
      )
WHERE "급여 합" > (SELECT SUM(SALARY)*0.2 FROM EMPLOYEE);
 
-- 14. 부서 명과 부서 별 급여 합계 조회
SELECT DEPT_TITLE, SUM(SALARY)
FROM DEPARTMENT
JOIN EMPLOYEE ON DEPT_CODE = DEPT_ID
GROUP BY DEPT_TITLE;